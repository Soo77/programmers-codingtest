package com.codingtest.practice.Java3rdEdition.exercise.Ex06;

/*
* 6-8
* 클래스변수: width, height
* 인스턴스 변수: kind, num
* 지역변수: args, card,k,n
*
* 6-9
* weapon, armor
* , weaponUp(), armorUp()
* 인스턴스마다 개별적인 값을 가져야하는 변수는 인스턴스 변수로,
* 모든 인스턴스가 공통적인 값을 가져야하는 변수는 클래스변수(statid변수)로 선언해야한다.
*
*
* 6-10
* b,e
* 생성자가 객체를 생성할 때 사용되기는 하지만, 객체를 초기화할 목적으로
* 사용되는 것이다. 객체를 생성하는 것은 new 연산자이다.
* 생성자도 오버로딩이 가능해서 하나의 클래스에 여러 개의 생성자를 정의할 수 있다.
*
* 6-11
* b
* this는 인스턴스 자신의 주소를 저장하고 있으며, 모든 인스턴스 메서드에
* 숨겨진 채로 존재하는 지역변수이다. 그래서 인스턴스 메서드 내에서만
* 사용할 수 있다.
*
* 6-12
* 오버로딩이 성립하기 위한 조건?
* c,d
*
* 6-13
* b,c,d
*
* 6-14
* e,c
*
* 6-15
* a
* 클래스변수 초기화시점: 클래스가 처음 로딩될 때 단 한번 초기화됨.
* 인스턴스변수 초기화시점: 인스턴스가 생성될 때마다 각 인스턴스 별로 초기화가 이루어진다.
*
* 클래스변수의 초기화순서: 기본값 => 명시적초기화 -> 클래스 초기화 블럭
* 인스턴스변수의 초기화 순서: 기본값 -> 명시적 초기화-> 인스턴스 초기화 블럭 -> 생성자
*
* 6-16
* a, e
* 힙영역에는 인스턴스변수가 생성되는 영역이며, 지역변수는 호출스택(call stack)에 생성된다.
*
*
* 6-18
* 라인A, 라인B , 라인D
* static변수의 초기화에 인스턴스변수를 사용할수X
* 꼭 사용해야한다면 객체를 생성해야함.
* static 메서드에서는 인스턴스변수를 사용할 수 X
* static 메서드에서는 인스턴스 메서드를 사용할 수 X
*
*
* */
public class Ex6_8 {

}
